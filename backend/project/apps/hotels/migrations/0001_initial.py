# Generated by Django 5.2.7 on 2025-10-13 07:44

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('common', '0004_delete_serviceprovider_airline_owner'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Amenity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('icon', models.CharField(blank=True, help_text='Icon class or emoji', max_length=50, null=True)),
                ('category', models.CharField(choices=[('basic', 'Basic'), ('comfort', 'Comfort'), ('dining', 'Dining'), ('wellness', 'Wellness & Fitness'), ('business', 'Business'), ('entertainment', 'Entertainment'), ('safety', 'Safety & Security')], default='basic', max_length=20)),
                ('is_popular', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Amenity',
                'verbose_name_plural': 'Amenities',
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='BookingRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adults', models.PositiveIntegerField(default=1)),
                ('children', models.PositiveIntegerField(default=0)),
                ('room_price_per_night', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_room_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('breakfast_included', models.BooleanField(default=False)),
                ('lunch_included', models.BooleanField(default=False)),
                ('dinner_included', models.BooleanField(default=False)),
                ('smoking_preference', models.BooleanField(default=False)),
                ('bed_preference', models.CharField(blank=True, max_length=50, null=True)),
                ('floor_preference', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'Booking Room',
                'verbose_name_plural': 'Booking Rooms',
                'ordering': ['booking', 'id'],
            },
        ),
        migrations.CreateModel(
            name='HotelChain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, unique=True)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='hotel_media/%Y/')),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Hotel Chain',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_number', models.CharField(help_text='e.g., 101, 201A', max_length=10)),
                ('floor', models.PositiveIntegerField()),
                ('status', models.CharField(choices=[('available', 'Available'), ('occupied', 'Occupied'), ('maintenance', 'Under Maintenance'), ('blocked', 'Blocked')], db_index=True, default='available', max_length=20)),
                ('is_smoking_allowed', models.BooleanField(default=False)),
                ('is_accessible', models.BooleanField(default=False, help_text='Wheelchair accessible')),
                ('last_maintained', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Room',
                'verbose_name_plural': 'Rooms',
                'ordering': ['room_type', 'floor', 'room_number'],
            },
        ),
        migrations.CreateModel(
            name='RoomAmenity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('icon', models.CharField(blank=True, max_length=50, null=True)),
                ('category', models.CharField(choices=[('bathroom', 'Bathroom'), ('bedroom', 'Bedroom'), ('entertainment', 'Entertainment'), ('food_drink', 'Food & Drink'), ('comfort', 'Comfort'), ('other', 'Other')], default='other', max_length=20)),
            ],
            options={
                'verbose_name': 'Room Amenity',
                'verbose_name_plural': 'Room Amenities',
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Guest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(choices=[('mr', 'Mr.'), ('mrs', 'Mrs.'), ('ms', 'Ms.'), ('dr', 'Dr.')], default='mr', max_length=10)),
                ('first_name', models.CharField(db_index=True, max_length=50)),
                ('last_name', models.CharField(db_index=True, max_length=50)),
                ('email', models.EmailField(db_index=True, max_length=254)),
                ('phone', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^\\+?1?\\d{9,15}$', 'Enter a valid phone number')])),
                ('alternate_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=10, null=True)),
                ('nationality', models.CharField(blank=True, max_length=50, null=True)),
                ('id_proof_type', models.CharField(blank=True, choices=[('passport', 'Passport'), ('aadhar', 'Aadhar Card'), ('pan', 'PAN Card'), ('driving_license', 'Driving License'), ('voter_id', 'Voter ID')], max_length=20, null=True)),
                ('id_proof_number', models.CharField(blank=True, max_length=50, null=True)),
                ('id_proof_document', models.FileField(blank=True, null=True, upload_to='guest_documents/%Y/%m/')),
                ('address', models.TextField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
                ('country', models.CharField(default='India', max_length=50)),
                ('pincode', models.CharField(blank=True, max_length=10, null=True)),
                ('special_requests', models.TextField(blank=True, null=True)),
                ('dietary_preferences', models.CharField(blank=True, max_length=200, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='guest_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Guest',
                'verbose_name_plural': 'Guests',
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='BookingGuest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_primary', models.BooleanField(default=False, help_text='Primary guest for this room')),
                ('guest_type', models.CharField(choices=[('adult', 'Adult'), ('child', 'Child (0-17 years)'), ('infant', 'Infant (0-2 years)')], default='adult', max_length=10)),
                ('age', models.PositiveIntegerField(blank=True, null=True)),
                ('booking_room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='guests', to='hotels.bookingroom')),
                ('guest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='room_stays', to='hotels.guest')),
            ],
            options={
                'verbose_name': 'Booking Guest',
                'verbose_name_plural': 'Booking Guests',
                'ordering': ['booking_room', '-is_primary'],
            },
        ),
        migrations.CreateModel(
            name='Hotel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=200)),
                ('slug', models.SlugField(max_length=250, unique=True)),
                ('star_rating', models.IntegerField(choices=[(1, '1 Star'), (2, '2 Star'), (3, '3 Star'), (4, '4 Star'), (5, '5 Star')], help_text='Official star rating', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('address', models.CharField(max_length=200)),
                ('city', models.CharField(db_index=True, max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('country', models.CharField(default='India', max_length=100)),
                ('pincode', models.CharField(max_length=10)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, validators=[django.core.validators.MinValueValidator(-90), django.core.validators.MaxValueValidator(90)])),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, validators=[django.core.validators.MinValueValidator(-180), django.core.validators.MaxValueValidator(180)])),
                ('distance_from_city_center_km', models.DecimalField(blank=True, decimal_places=2, help_text='Distance from city center in KM', max_digits=6, null=True)),
                ('distance_from_airport_km', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('phone', models.CharField(max_length=20)),
                ('alternate_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(blank=True, max_length=50, null=True)),
                ('check_in_time', models.TimeField(default='14:00:00')),
                ('check_out_time', models.TimeField(default='11:00:00')),
                ('cancellation_policy', models.TextField(help_text='Cancellation and refund policy')),
                ('child_policy', models.TextField(blank=True, help_text='Age limits and pricing for children', null=True)),
                ('pet_policy', models.TextField(blank=True, null=True)),
                ('description', models.TextField(help_text='Main description')),
                ('short_description', models.CharField(blank=True, help_text='Brief tagline/description', max_length=500, null=True)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('verified', models.BooleanField(default=False)),
                ('average_rating', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('total_reviews', models.PositiveIntegerField(default=0)),
                ('total_rooms', models.PositiveIntegerField(default=0)),
                ('service_provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.serviceprovider')),
                ('chain', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='hotels', to='hotels.hotelchain')),
            ],
            options={
                'verbose_name': 'Hotel',
                'verbose_name_plural': 'Hotels',
                'ordering': ['-is_featured', 'name'],
            },
        ),
        migrations.CreateModel(
            name='HotelAmenity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_free', models.BooleanField(default=True)),
                ('additional_charge', models.DecimalField(blank=True, decimal_places=2, help_text='Additional charge if not free', max_digits=8, null=True)),
                ('amenity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hotels.amenity')),
                ('hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hotel_amenities', to='hotels.hotel')),
            ],
            options={
                'verbose_name': 'Hotel Amenity',
                'verbose_name_plural': 'Hotel Amenities',
            },
        ),
        migrations.CreateModel(
            name='HotelBooking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_reference', models.CharField(db_index=True, help_text='Unique booking reference number', max_length=15, unique=True)),
                ('check_in_date', models.DateField(db_index=True)),
                ('check_out_date', models.DateField(db_index=True)),
                ('total_nights', models.PositiveIntegerField()),
                ('total_adults', models.PositiveIntegerField(default=1)),
                ('total_children', models.PositiveIntegerField(default=0)),
                ('total_rooms', models.PositiveIntegerField(default=1)),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=10)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('paid_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('currency', models.CharField(default='INR', max_length=3)),
                ('status', models.CharField(choices=[('pending', 'Pending Payment'), ('confirmed', 'Confirmed'), ('checked_in', 'Checked In'), ('checked_out', 'Checked Out'), ('cancelled', 'Cancelled'), ('no_show', 'No Show')], db_index=True, default='pending', max_length=20)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('paid', 'Paid'), ('partially_paid', 'Partially Paid'), ('refunded', 'Refunded'), ('failed', 'Failed')], db_index=True, default='pending', max_length=20)),
                ('booked_at', models.DateTimeField(auto_now_add=True)),
                ('confirmed_at', models.DateTimeField(blank=True, null=True)),
                ('checked_in_at', models.DateTimeField(blank=True, null=True)),
                ('checked_out_at', models.DateTimeField(blank=True, null=True)),
                ('cancelled_at', models.DateTimeField(blank=True, null=True)),
                ('cancellation_reason', models.TextField(blank=True, null=True)),
                ('contact_email', models.EmailField(max_length=254)),
                ('contact_phone', models.CharField(max_length=20)),
                ('special_requests', models.TextField(blank=True, null=True)),
                ('arrival_time', models.TimeField(blank=True, help_text='Expected arrival time', null=True)),
                ('coupon_code', models.CharField(blank=True, max_length=50, null=True)),
                ('internal_notes', models.TextField(blank=True, null=True)),
                ('source', models.CharField(default='website', help_text='Booking source (website, app, phone, walk-in)', max_length=50)),
                ('hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='hotels.hotel')),
                ('primary_guest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='primary_bookings', to='hotels.guest')),
            ],
            options={
                'verbose_name': 'Hotel Booking',
                'verbose_name_plural': 'Hotel Bookings',
                'ordering': ['-booked_at'],
            },
        ),
        migrations.AddField(
            model_name='bookingroom',
            name='booking',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='booking_rooms', to='hotels.hotelbooking'),
        ),
        migrations.CreateModel(
            name='HotelImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='hotels/%Y/%m/')),
                ('caption', models.CharField(blank=True, max_length=200, null=True)),
                ('is_primary', models.BooleanField(default=False)),
                ('display_order', models.PositiveIntegerField(default=0)),
                ('image_type', models.CharField(choices=[('exterior', 'Exterior'), ('lobby', 'Lobby'), ('room', 'Room'), ('restaurant', 'Restaurant'), ('view', 'View'), ('other', 'Other')], default='other', max_length=20)),
                ('hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='hotels.hotel')),
            ],
            options={
                'verbose_name': 'Hotel Image',
                'verbose_name_plural': 'Hotel Images',
                'ordering': ['hotel', 'display_order'],
            },
        ),
        migrations.AddField(
            model_name='bookingroom',
            name='room',
            field=models.ForeignKey(blank=True, help_text='Assigned room (allocated at check-in)', null=True, on_delete=django.db.models.deletion.SET_NULL, to='hotels.room'),
        ),
        migrations.CreateModel(
            name='RoomType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='e.g., Deluxe Room, Suite, Standard Room', max_length=100)),
                ('slug', models.SlugField(max_length=150)),
                ('description', models.TextField()),
                ('max_adults', models.PositiveIntegerField(default=2, validators=[django.core.validators.MinValueValidator(1)])),
                ('max_children', models.PositiveIntegerField(default=2)),
                ('max_occupancy', models.PositiveIntegerField(default=3, help_text='Total maximum occupancy (adults + children)')),
                ('number_of_beds', models.PositiveIntegerField(default=1)),
                ('bed_type', models.CharField(choices=[('single', 'Single Bed'), ('double', 'Double Bed'), ('queen', 'Queen Bed'), ('king', 'King Bed'), ('twin', 'Twin Beds')], default='double', max_length=20)),
                ('view_type', models.CharField(blank=True, choices=[('city', 'City View'), ('garden', 'Garden View'), ('sea', 'Sea View'), ('mountain', 'Mountain View'), ('no_view', 'No View')], default='no_view', max_length=20, null=True)),
                ('base_price', models.DecimalField(decimal_places=2, help_text='Base price per night', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('weekend_price', models.DecimalField(blank=True, decimal_places=2, help_text='Weekend pricing (if different)', max_digits=10, null=True)),
                ('extra_adult_charge', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Additional charge per extra adult', max_digits=8)),
                ('extra_child_charge', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Additional charge per extra child', max_digits=8)),
                ('breakfast_included', models.BooleanField(default=False)),
                ('lunch_included', models.BooleanField(default=False)),
                ('dinner_included', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('total_rooms', models.PositiveIntegerField(default=0, help_text='Total number of this room type')),
                ('hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='room_types', to='hotels.hotel')),
            ],
            options={
                'verbose_name': 'Room Type',
                'verbose_name_plural': 'Room Types',
                'ordering': ['hotel', 'base_price'],
            },
        ),
        migrations.CreateModel(
            name='RoomAvailability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(db_index=True)),
                ('available_rooms', models.PositiveIntegerField(default=0)),
                ('blocked_rooms', models.PositiveIntegerField(default=0)),
                ('price_per_night', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('weekend_surcharge', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=8)),
                ('seasonal_surcharge', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=8)),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('tax_percentage', models.DecimalField(decimal_places=2, default=Decimal('12.00'), help_text='GST or tax percentage', max_digits=5)),
                ('is_available', models.BooleanField(db_index=True, default=True)),
                ('min_stay_nights', models.PositiveIntegerField(default=1, help_text='Minimum nights required for booking')),
                ('room_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availability', to='hotels.roomtype')),
            ],
            options={
                'verbose_name': 'Room Availability',
                'verbose_name_plural': 'Room Availabilities',
                'ordering': ['room_type', 'date'],
            },
        ),
        migrations.AddField(
            model_name='room',
            name='room_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rooms', to='hotels.roomtype'),
        ),
        migrations.AddField(
            model_name='bookingroom',
            name='room_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hotels.roomtype'),
        ),
        migrations.CreateModel(
            name='RoomTypeAmenity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amenity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hotels.roomamenity')),
                ('room_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='room_amenities', to='hotels.roomtype')),
            ],
        ),
        migrations.CreateModel(
            name='RoomTypeImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='room_types/%Y/%m/')),
                ('caption', models.CharField(blank=True, max_length=200, null=True)),
                ('is_primary', models.BooleanField(default=False)),
                ('display_order', models.PositiveIntegerField(default=0)),
                ('room_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='hotels.roomtype')),
            ],
            options={
                'verbose_name': 'Room Type Image',
                'verbose_name_plural': 'Room Type Images',
                'ordering': ['room_type', 'display_order'],
            },
        ),
        migrations.AddIndex(
            model_name='guest',
            index=models.Index(fields=['email'], name='hotels_gues_email_5a23dc_idx'),
        ),
        migrations.AddIndex(
            model_name='guest',
            index=models.Index(fields=['phone'], name='hotels_gues_phone_169ee3_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='hotelamenity',
            unique_together={('hotel', 'amenity')},
        ),
        migrations.AddIndex(
            model_name='hotelbooking',
            index=models.Index(fields=['booking_reference'], name='hotels_hote_booking_5b9296_idx'),
        ),
        migrations.AddIndex(
            model_name='hotelbooking',
            index=models.Index(fields=['hotel', 'check_in_date'], name='hotels_hote_hotel_i_94880d_idx'),
        ),
        migrations.AddIndex(
            model_name='hotelbooking',
            index=models.Index(fields=['primary_guest', 'status'], name='hotels_hote_primary_cf6328_idx'),
        ),
        migrations.AddIndex(
            model_name='hotelbooking',
            index=models.Index(fields=['-booked_at'], name='hotels_hote_booked__778c96_idx'),
        ),
        migrations.AddIndex(
            model_name='hotelbooking',
            index=models.Index(fields=['status', 'payment_status'], name='hotels_hote_status_ae8112_idx'),
        ),
        migrations.AddIndex(
            model_name='hotel',
            index=models.Index(fields=['city', 'is_active'], name='hotels_hote_city_a8c2d6_idx'),
        ),
        migrations.AddIndex(
            model_name='hotel',
            index=models.Index(fields=['name', 'city'], name='hotels_hote_name_2e8611_idx'),
        ),
        migrations.AddIndex(
            model_name='hotel',
            index=models.Index(fields=['-average_rating'], name='hotels_hote_average_d494c3_idx'),
        ),
        migrations.AddIndex(
            model_name='roomtype',
            index=models.Index(fields=['hotel', 'is_active'], name='hotels_room_hotel_i_898f3f_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='roomtype',
            unique_together={('hotel', 'slug')},
        ),
        migrations.AddIndex(
            model_name='roomavailability',
            index=models.Index(fields=['room_type', 'date', 'is_available'], name='hotels_room_room_ty_7a008e_idx'),
        ),
        migrations.AddIndex(
            model_name='roomavailability',
            index=models.Index(fields=['date', 'is_available'], name='hotels_room_date_163646_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='roomavailability',
            unique_together={('room_type', 'date')},
        ),
        migrations.AddIndex(
            model_name='room',
            index=models.Index(fields=['room_type', 'status'], name='hotels_room_room_ty_244695_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='room',
            unique_together={('room_type', 'room_number')},
        ),
        migrations.AlterUniqueTogether(
            name='roomtypeamenity',
            unique_together={('room_type', 'amenity')},
        ),
    ]
